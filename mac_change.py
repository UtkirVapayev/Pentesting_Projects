import subprocess
import optparse
import re


def get_arguments():
    parser = optparse.OptionParser()
    parser.add_option("-i", "--interface", dest="interface", help="Interface to change it's Mac adress")
    parser.add_option("-m", "--mac", dest="new_mac", help="New Mac adress")
    (options, arguments) = parser.parse_args()
    if not options.interface:
        parser.error("[-] interface ni kiritishda xatolik! Iltimos tekshirib ko'ring.")
    elif not options.new_mac:
        parser.error("[-] New Mac ni kiritishda xatolik! Iltimos tekshirib ko'ring.")
    return options


def change_mac(interface, new_mac):
    subprocess.call(["ifconfig", interface, "down"])
    subprocess.call(["ifconfig", interface, "hw", "ether", new_mac])
    subprocess.call(["ifconfig", interface, "up"])
    print("[+] Changing Mac addres for " + interface + " to " + new_mac)


def get_current_mac(interface):
    ifconfig_result = subprocess.check_output(["ifconfig", interface])
    mac_adress_search_reult = re.search(r"\w\w:\w\w:\w\w:\w\w:\w\w:\w\w", str(ifconfig_result))

    if mac_adress_search_reult:
        return mac_adress_search_reult.group(0)
    else:
        print("[-] could not search MAC adress")


options = get_arguments()
current_mac = get_current_mac(options.interface)
print("Current Mac = " + str(current_mac))

change_mac(options.interface, options.new_mac)
current_mac = get_current_mac(options.interface)
if current_mac == options.new_mac:
    print("[+] Mac address was succesfully changed to", current_mac)
else:
    print("[+] Mac addres did not changed")