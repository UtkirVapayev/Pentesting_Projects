import scapy.all as scapy
import optparse


def get_ip():
    parser = optparse.OptionParser()
    parser.add_option("-s", "--scan", dest="scanner", help="Input ip, i can scanning network")
    (options, arguments) = parser.parse_args()
    if not options.scanner:
        print("Please specify an IP range to scan using -s or --scan." )
    return options.scanner


def scan(ip):
    arp_request = scapy.ARP(pdst=ip)
    broadcast = scapy.Ether(dst="ff:ff:ff:ff:ff:ff")
    arp_request_broadcast = broadcast / arp_request
    answerad_list = scapy.srp(arp_request_broadcast, timeout=1, verbose=False)[0]

    clients_list = []
    for element in answerad_list:
        clients_dict = {"ip": element[1].psrc, "mac": element[1].hwsrc}
        clients_list.append(clients_dict)
    return clients_list


def print_result(result_list):
    print("\nIP\t\t\tMAC Address\n-------------------------------------------------")
    for client in result_list:
        print(f"{client['ip']} \t\t {client['mac']}")


result_ip = get_ip()
scan_list = scan(result_ip)
print_result(scan_list)
